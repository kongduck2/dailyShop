<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.nyang.shop.dao.UserMapper">
	<select id="login" parameterType="User" resultType="User">
		select idx,email,phone,name,zipCode,address,addressDetail,regist_type,registDate 
		from user where email=#{email} and password=sha2(#{password},256)
	</select>
	
	<select id="getAll" resultType="User" > <!-- 모든 유저정보 -->
		select * from user
	</select>
	
	<select id="getOne" resultType="User" parameterType="int">
		select idx,email,name,regist_type,registDate,address from user where idx = #{idx}
	</select>
	<!--파라미터가 여러개의 값일때 : Map(key와 value) 또는  DTO 클래스-->
	<insert id="insert" parameterType="User" useGeneratedKeys="true"
				keyColumn="idx" keyProperty="idx">
	<!-- insert 후에 자동증가컬럼값 가져오기 : useGeneratedKeys="true" 
		  데이터베이스에서 자동증가 컬럼 keyColumn,  매핑되는 dto 클래스의 변수명 keyProperty-->
		insert into user(email,password,phone,zipCode,address,addressDetail,regist_type,name)
		values (#{email},sha2(#{password},256),#{phone},#{zipCode},#{address},#{addressDetail},#{regist_type},#{name})
	</insert>
	<update id="update" parameterType="User">
		update user set phone=#{phone},address=#{address},addressDetail=#{addressDetail},password = sha2(#{password},256)
		 where idx=#{idx}
	</update>
	<delete id="delete" parameterType="int" >
		delete from user where idx=#{idx}
	</delete>
	
	<select id="emailCheck" parameterType="String" resultType="int"> <!-- email 중복체크 -->
		select count(*) from user where email = #{email}
	</select>
	
	<select id="pwCheck" parameterType="User" resultType="int"> <!-- 회원정보 수정시 패스워드 체크 -->
		select count(*) from user where email = #{email} and password = sha2(#{password},256)
	</select>
	
	<insert id="addOrderList" parameterType="OrderList"> <!-- 주문내역  -->
		insert into orderList(userIdx,productIdx,thumbnailImg,productName,productOpName,quantity,totalPrice)
  		values (#{userIdx},#{productIdx},#{thumbnailImg},#{productName},#{productOpName},#{quantity},#{totalPrice})			
	</insert>
	
	<select id="getOrderList" parameterType="int" resultType="OrderList" > <!-- 주문목록 가져오기 -->
		select * from orderList where userIdx = #{userIdx}
	</select>
	
	<select id="getOrder" parameterType="int" resultType="OrderList" > <!-- 주문목록 가져오기 -->
		select * from orderList where productIdx = #{productIdx}
	</select>
		
  </mapper>